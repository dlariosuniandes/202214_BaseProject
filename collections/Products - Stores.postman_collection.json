{
	"info": {
		"_postman_id": "3886e0a4-f399-4795-9dac-719d07e819c6",
		"name": "Products - Stores",
		"description": "Buy or rent spacecrafts",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17413651"
	},
	"item": [
		{
			"name": "Add a Store to a Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/products/{{productId}}/stores/{{storeId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"{{productId}}",
						"stores",
						"{{storeId}}"
					]
				}
			},
			"response": [
				{
					"name": "Add a Store to a Product",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/{{productId}}/stores/{{storeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"{{productId}}",
								"stores",
								"{{storeId}}"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"id\": \"cf1d08c5-555f-4dcb-8d7b-70fd85ba3e8f\",\n    \"name\": \"Platanitos\",\n    \"price\": \"10.50\",\n    \"type\": \"Perecedero\",\n    \"stores\": [\n        {\n            \"id\": \"161ffe6e-c3e8-45a3-a5c2-af7470b397c0\",\n            \"name\": \"Supermercado Bacano\",\n            \"city\": \"CAR\",\n            \"address\": \"Calle de la Independencia\",\n            \"products\": []\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Add a non existant Store to Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"The store with the given id was not found\");",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Platanitos\",\n    \"type\": \"Unknown\",\n    \"price\":\"10.50\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/products/{{productId}}/stores/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"{{productId}}",
						"stores",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Add a non existant Store to Product",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Platanitos\",\n    \"type\": \"Unknown\",\n    \"price\":\"10.50\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/{{productId}}/stores/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"{{productId}}",
								"stores",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The store with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Get all Stores from Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of stores in product > ' + 0, function () {",
							"   var data = pm.response.json()",
							"   pm.expect(data.length).to.greaterThan(0)",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/products/{{productId}}/stores",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"{{productId}}",
						"stores"
					]
				}
			},
			"response": [
				{
					"name": "Get all Stores from Product",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/products/{{productId}}/stores",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"{{productId}}",
								"stores"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "[\n    {\n        \"id\": \"a35cb8c8-83fe-48a3-bdb0-bc1c08e36e50\",\n        \"name\": \"Supermercado Bacano\",\n        \"city\": \"CAR\",\n        \"address\": \"Calle de la Independencia\"\n    }\n]"
				}
			]
		},
		{
			"name": "Get a Store from a Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/products/{{productId}}/stores/{{storeId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"{{productId}}",
						"stores",
						"{{storeId}}"
					]
				}
			},
			"response": [
				{
					"name": "Get a Store from a Product",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/products/{{productId}}/stores/{{storeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"{{productId}}",
								"stores",
								"{{storeId}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"id\": \"0c49243a-7c0f-4ca6-a1b7-fb4b602dc3fd\",\n    \"name\": \"Supermercado Bacano\",\n    \"city\": \"CAR\",\n    \"address\": \"Calle de la Independencia\"\n}"
				}
			]
		},
		{
			"name": "Get a Store from a non existant Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"The product with the given id was not found\");",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/products/00000000-0000-0000-0000-000000000000/stores/{{storeId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"00000000-0000-0000-0000-000000000000",
						"stores",
						"{{storeId}}"
					]
				}
			},
			"response": [
				{
					"name": "Get a Store from a non existant Product",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/products/00000000-0000-0000-0000-000000000000/stores/{{storeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"00000000-0000-0000-0000-000000000000",
								"stores",
								"{{storeId}}"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The product with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Associate Stores to a Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id\": \"85ab1a3a-2270-4e9b-8a78-5796e241bce5\",\n        \"name\": \"Supermercado Bacano\",\n        \"city\": \"CAR\",\n        \"address\": \"Calle de la Independencia\",\n        \"products\": []\n    },\n    {\n    \"name\": \"Supermercado Bacano\",\n    \"city\": \"CAR\",\n    \"address\": \"Calle de la Independencia\",\n    \"id\": \"eee8fe7c-cdd4-4fc5-9e26-d22a556c2b90\"\n}\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/products/{{productId}}/stores",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"{{productId}}",
						"stores"
					]
				}
			},
			"response": [
				{
					"name": "Associate Stores to a Product",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"85ab1a3a-2270-4e9b-8a78-5796e241bce5\",\n        \"name\": \"Supermercado Bacano\",\n        \"city\": \"CAR\",\n        \"address\": \"Calle de la Independencia\",\n        \"products\": []\n    },\n    {\n    \"name\": \"Supermercado Bacano\",\n    \"city\": \"CAR\",\n    \"address\": \"Calle de la Independencia\",\n    \"id\": \"eee8fe7c-cdd4-4fc5-9e26-d22a556c2b90\"\n}\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/{{productId}}/stores",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"{{productId}}",
								"stores"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"id\": \"043438dc-3a48-436a-bddc-51a6f09e29e5\",\n    \"name\": \"Platanitos\",\n    \"price\": \"10.50\",\n    \"type\": \"Perecedero\",\n    \"stores\": [\n        {\n            \"id\": \"85ab1a3a-2270-4e9b-8a78-5796e241bce5\",\n            \"name\": \"Supermercado Bacano\",\n            \"city\": \"CAR\",\n            \"address\": \"Calle de la Independencia\",\n            \"products\": []\n        },\n        {\n            \"name\": \"Supermercado Bacano\",\n            \"city\": \"CAR\",\n            \"address\": \"Calle de la Independencia\",\n            \"id\": \"eee8fe7c-cdd4-4fc5-9e26-d22a556c2b90\"\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Associate non existant Stores to a Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id\": \"00000000-0000-0000-0000-000000000000\",\n        \"name\": \"Supermercado Bacano\",\n        \"city\": \"CAR\",\n        \"address\": \"Calle de la Independencia\",\n        \"products\": []\n    },\n    {\n    \"name\": \"Supermercado Bacano\",\n    \"city\": \"CAR\",\n    \"address\": \"Calle de la Independencia\",\n    \"id\": \"eee8fe7c-cdd4-4fc5-9e26-d22a556c2b90\"\n}\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/products/{{productId}}/stores",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"{{productId}}",
						"stores"
					]
				}
			},
			"response": [
				{
					"name": "Associate non existant Stores to a Product",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"85ab1a3a-2270-4e9b-8a78-5796e241bce5\",\n        \"name\": \"Supermercado Bacano\",\n        \"city\": \"CAR\",\n        \"address\": \"Calle de la Independencia\",\n        \"products\": []\n    },\n    {\n    \"name\": \"Supermercado Bacano\",\n    \"city\": \"CAR\",\n    \"address\": \"Calle de la Independencia\",\n    \"id\": \"eee8fe7c-cdd4-4fc5-9e26-d22a556c2b90\"\n}\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/{{productId}}/stores",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"{{productId}}",
								"stores"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The store with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Delete a Store from a Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/products/{{productId}}/stores/{{storeId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"{{productId}}",
						"stores",
						"{{storeId}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete a Store from a Product",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/{{productId}}/stores/{{storeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"{{productId}}",
								"stores",
								"{{storeId}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Delete an non existant Store from a Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {",
							"   pm.response.to.have.status(412);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"store with the given id is not associated to that product\");",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/products/{{productId}}/stores/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"{{productId}}",
						"stores",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Delete an non existant Store from a Product",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products/{{productId}}/stores/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"{{productId}}",
								"stores",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 412,\n    \"message\": \"store with the given id is not associated to that product\",\n    \"error\": \"Precondition Failed\"\n}"
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "X-Api-Key",
				"type": "string"
			},
			{
				"key": "value",
				"value": "<API Key>",
				"type": "string"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api/v1",
			"type": "string"
		}
	]
}